/* tslint:disable */
/* eslint-disable */
/**
 * ZMDS API documentation
 * API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LocalizedBooleanValue,
    LocalizedBooleanValueFromJSON,
    LocalizedBooleanValueFromJSONTyped,
    LocalizedBooleanValueToJSON,
    LocalizedCustomerNativeStatus,
    LocalizedCustomerNativeStatusFromJSON,
    LocalizedCustomerNativeStatusFromJSONTyped,
    LocalizedCustomerNativeStatusToJSON,
    LocalizedCustomerState,
    LocalizedCustomerStateFromJSON,
    LocalizedCustomerStateFromJSONTyped,
    LocalizedCustomerStateToJSON,
    LocalizedCustomerType,
    LocalizedCustomerTypeFromJSON,
    LocalizedCustomerTypeFromJSONTyped,
    LocalizedCustomerTypeToJSON,
    LocalizedErrorCode,
    LocalizedErrorCodeFromJSON,
    LocalizedErrorCodeFromJSONTyped,
    LocalizedErrorCodeToJSON,
    LocalizedProductAvailability,
    LocalizedProductAvailabilityFromJSON,
    LocalizedProductAvailabilityFromJSONTyped,
    LocalizedProductAvailabilityToJSON,
    LocalizedRejectionReason,
    LocalizedRejectionReasonFromJSON,
    LocalizedRejectionReasonFromJSONTyped,
    LocalizedRejectionReasonToJSON,
} from './';

/**
 * 
 * @export
 * @interface DictionariesResponse
 */
export interface DictionariesResponse {
    /**
     * 
     * @type {Array<LocalizedCustomerState>}
     * @memberof DictionariesResponse
     */
    localizedCustomerStates?: Array<LocalizedCustomerState>;
    /**
     * 
     * @type {Array<LocalizedCustomerNativeStatus>}
     * @memberof DictionariesResponse
     */
    localizedCustomerNativeStatuses?: Array<LocalizedCustomerNativeStatus>;
    /**
     * 
     * @type {Array<LocalizedCustomerType>}
     * @memberof DictionariesResponse
     */
    localizedCustomerTypes?: Array<LocalizedCustomerType>;
    /**
     * 
     * @type {Array<LocalizedRejectionReason>}
     * @memberof DictionariesResponse
     */
    localizedRejectionReasons?: Array<LocalizedRejectionReason>;
    /**
     * 
     * @type {Array<LocalizedProductAvailability>}
     * @memberof DictionariesResponse
     */
    localizedProductAvailabilities?: Array<LocalizedProductAvailability>;
    /**
     * 
     * @type {Array<LocalizedBooleanValue>}
     * @memberof DictionariesResponse
     */
    localizedBooleanValues?: Array<LocalizedBooleanValue>;
    /**
     * 
     * @type {Array<LocalizedErrorCode>}
     * @memberof DictionariesResponse
     */
    localizedErrorCodes?: Array<LocalizedErrorCode>;
}

export function DictionariesResponseFromJSON(json: any): DictionariesResponse {
    return DictionariesResponseFromJSONTyped(json, false);
}

export function DictionariesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DictionariesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'localizedCustomerStates': !exists(json, 'localizedCustomerStates') ? undefined : ((json['localizedCustomerStates'] as Array<any>).map(LocalizedCustomerStateFromJSON)),
        'localizedCustomerNativeStatuses': !exists(json, 'localizedCustomerNativeStatuses') ? undefined : ((json['localizedCustomerNativeStatuses'] as Array<any>).map(LocalizedCustomerNativeStatusFromJSON)),
        'localizedCustomerTypes': !exists(json, 'localizedCustomerTypes') ? undefined : ((json['localizedCustomerTypes'] as Array<any>).map(LocalizedCustomerTypeFromJSON)),
        'localizedRejectionReasons': !exists(json, 'localizedRejectionReasons') ? undefined : ((json['localizedRejectionReasons'] as Array<any>).map(LocalizedRejectionReasonFromJSON)),
        'localizedProductAvailabilities': !exists(json, 'localizedProductAvailabilities') ? undefined : ((json['localizedProductAvailabilities'] as Array<any>).map(LocalizedProductAvailabilityFromJSON)),
        'localizedBooleanValues': !exists(json, 'localizedBooleanValues') ? undefined : ((json['localizedBooleanValues'] as Array<any>).map(LocalizedBooleanValueFromJSON)),
        'localizedErrorCodes': !exists(json, 'localizedErrorCodes') ? undefined : ((json['localizedErrorCodes'] as Array<any>).map(LocalizedErrorCodeFromJSON)),
    };
}

export function DictionariesResponseToJSON(value?: DictionariesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'localizedCustomerStates': value.localizedCustomerStates === undefined ? undefined : ((value.localizedCustomerStates as Array<any>).map(LocalizedCustomerStateToJSON)),
        'localizedCustomerNativeStatuses': value.localizedCustomerNativeStatuses === undefined ? undefined : ((value.localizedCustomerNativeStatuses as Array<any>).map(LocalizedCustomerNativeStatusToJSON)),
        'localizedCustomerTypes': value.localizedCustomerTypes === undefined ? undefined : ((value.localizedCustomerTypes as Array<any>).map(LocalizedCustomerTypeToJSON)),
        'localizedRejectionReasons': value.localizedRejectionReasons === undefined ? undefined : ((value.localizedRejectionReasons as Array<any>).map(LocalizedRejectionReasonToJSON)),
        'localizedProductAvailabilities': value.localizedProductAvailabilities === undefined ? undefined : ((value.localizedProductAvailabilities as Array<any>).map(LocalizedProductAvailabilityToJSON)),
        'localizedBooleanValues': value.localizedBooleanValues === undefined ? undefined : ((value.localizedBooleanValues as Array<any>).map(LocalizedBooleanValueToJSON)),
        'localizedErrorCodes': value.localizedErrorCodes === undefined ? undefined : ((value.localizedErrorCodes as Array<any>).map(LocalizedErrorCodeToJSON)),
    };
}


