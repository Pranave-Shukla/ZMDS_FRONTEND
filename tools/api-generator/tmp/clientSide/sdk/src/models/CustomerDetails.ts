/* tslint:disable */
/* eslint-disable */
/**
 * ZMDS API documentation
 * API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomerNativeStatus,
    CustomerNativeStatusFromJSON,
    CustomerNativeStatusFromJSONTyped,
    CustomerNativeStatusToJSON,
    CustomerState,
    CustomerStateFromJSON,
    CustomerStateFromJSONTyped,
    CustomerStateToJSON,
    CustomerType,
    CustomerTypeFromJSON,
    CustomerTypeFromJSONTyped,
    CustomerTypeToJSON,
    RejectionReason,
    RejectionReasonFromJSON,
    RejectionReasonFromJSONTyped,
    RejectionReasonToJSON,
    SourceSystem,
    SourceSystemFromJSON,
    SourceSystemFromJSONTyped,
    SourceSystemToJSON,
} from './';

/**
 * 
 * @export
 * @interface CustomerDetails
 */
export interface CustomerDetails {
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    erpId?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    nativeId?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    companyName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    streetAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    countryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    city?: string;
    /**
     * 
     * @type {CustomerType}
     * @memberof CustomerDetails
     */
    type?: CustomerType;
    /**
     * 
     * @type {CustomerNativeStatus}
     * @memberof CustomerDetails
     */
    nativeStatus?: CustomerNativeStatus;
    /**
     * 
     * @type {CustomerState}
     * @memberof CustomerDetails
     */
    state?: CustomerState;
    /**
     * 
     * @type {Date}
     * @memberof CustomerDetails
     */
    nativeCreatedDate?: Date;
    /**
     * 
     * @type {SourceSystem}
     * @memberof CustomerDetails
     */
    sourceSystem?: SourceSystem;
    /**
     * 
     * @type {RejectionReason}
     * @memberof CustomerDetails
     */
    rejectionReason?: RejectionReason;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetails
     */
    freeText?: string;
}

export function CustomerDetailsFromJSON(json: any): CustomerDetails {
    return CustomerDetailsFromJSONTyped(json, false);
}

export function CustomerDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'erpId': !exists(json, 'erpId') ? undefined : json['erpId'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'nativeId': !exists(json, 'nativeId') ? undefined : json['nativeId'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'companyName': !exists(json, 'companyName') ? undefined : json['companyName'],
        'streetAddress': !exists(json, 'streetAddress') ? undefined : json['streetAddress'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'type': !exists(json, 'type') ? undefined : CustomerTypeFromJSON(json['type']),
        'nativeStatus': !exists(json, 'nativeStatus') ? undefined : CustomerNativeStatusFromJSON(json['nativeStatus']),
        'state': !exists(json, 'state') ? undefined : CustomerStateFromJSON(json['state']),
        'nativeCreatedDate': !exists(json, 'nativeCreatedDate') ? undefined : (new Date(json['nativeCreatedDate'])),
        'sourceSystem': !exists(json, 'sourceSystem') ? undefined : SourceSystemFromJSON(json['sourceSystem']),
        'rejectionReason': !exists(json, 'rejectionReason') ? undefined : RejectionReasonFromJSON(json['rejectionReason']),
        'freeText': !exists(json, 'freeText') ? undefined : json['freeText'],
    };
}

export function CustomerDetailsToJSON(value?: CustomerDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'erpId': value.erpId,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'nativeId': value.nativeId,
        'title': value.title,
        'companyName': value.companyName,
        'streetAddress': value.streetAddress,
        'postalCode': value.postalCode,
        'countryCode': value.countryCode,
        'city': value.city,
        'type': CustomerTypeToJSON(value.type),
        'nativeStatus': CustomerNativeStatusToJSON(value.nativeStatus),
        'state': CustomerStateToJSON(value.state),
        'nativeCreatedDate': value.nativeCreatedDate === undefined ? undefined : (value.nativeCreatedDate.toISOString()),
        'sourceSystem': SourceSystemToJSON(value.sourceSystem),
        'rejectionReason': RejectionReasonToJSON(value.rejectionReason),
        'freeText': value.freeText,
    };
}


