/* tslint:disable */
/* eslint-disable */
/**
 * ZMDS API documentation
 * API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuditDataSet,
    AuditDataSetFromJSON,
    AuditDataSetFromJSONTyped,
    AuditDataSetToJSON,
} from './';

/**
 * 
 * @export
 * @interface Audit
 */
export interface Audit {
    /**
     * 
     * @type {AuditDataSet}
     * @memberof Audit
     */
    dataSet?: AuditDataSet;
    /**
     * 
     * @type {string}
     * @memberof Audit
     */
    header?: string;
    /**
     * 
     * @type {string}
     * @memberof Audit
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof Audit
     */
    initiator?: string;
    /**
     * 
     * @type {Date}
     * @memberof Audit
     */
    date?: Date;
}

export function AuditFromJSON(json: any): Audit {
    return AuditFromJSONTyped(json, false);
}

export function AuditFromJSONTyped(json: any, ignoreDiscriminator: boolean): Audit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dataSet': !exists(json, 'dataSet') ? undefined : AuditDataSetFromJSON(json['dataSet']),
        'header': !exists(json, 'header') ? undefined : json['header'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'initiator': !exists(json, 'initiator') ? undefined : json['initiator'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
    };
}

export function AuditToJSON(value?: Audit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dataSet': AuditDataSetToJSON(value.dataSet),
        'header': value.header,
        'message': value.message,
        'initiator': value.initiator,
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
    };
}


