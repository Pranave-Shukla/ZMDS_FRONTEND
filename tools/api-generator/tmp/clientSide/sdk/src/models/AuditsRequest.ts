/* tslint:disable */
/* eslint-disable */
/**
 * ZMDS API documentation
 * API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SearchAuditsBy,
    SearchAuditsByFromJSON,
    SearchAuditsByFromJSONTyped,
    SearchAuditsByToJSON,
    SortAuditsBy,
    SortAuditsByFromJSON,
    SortAuditsByFromJSONTyped,
    SortAuditsByToJSON,
    SortDirection,
    SortDirectionFromJSON,
    SortDirectionFromJSONTyped,
    SortDirectionToJSON,
} from './';

/**
 * 
 * @export
 * @interface AuditsRequest
 */
export interface AuditsRequest {
    /**
     * 
     * @type {number}
     * @memberof AuditsRequest
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof AuditsRequest
     */
    pageNumber?: number;
    /**
     * 
     * @type {SortAuditsBy}
     * @memberof AuditsRequest
     */
    sortBy: SortAuditsBy;
    /**
     * 
     * @type {SortDirection}
     * @memberof AuditsRequest
     */
    sortDirection: SortDirection;
    /**
     * 
     * @type {Array<SearchAuditsBy>}
     * @memberof AuditsRequest
     */
    filters?: Array<SearchAuditsBy>;
}

export function AuditsRequestFromJSON(json: any): AuditsRequest {
    return AuditsRequestFromJSONTyped(json, false);
}

export function AuditsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pageSize': !exists(json, 'pageSize') ? undefined : json['pageSize'],
        'pageNumber': !exists(json, 'pageNumber') ? undefined : json['pageNumber'],
        'sortBy': SortAuditsByFromJSON(json['sortBy']),
        'sortDirection': SortDirectionFromJSON(json['sortDirection']),
        'filters': !exists(json, 'filters') ? undefined : ((json['filters'] as Array<any>).map(SearchAuditsByFromJSON)),
    };
}

export function AuditsRequestToJSON(value?: AuditsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pageSize': value.pageSize,
        'pageNumber': value.pageNumber,
        'sortBy': SortAuditsByToJSON(value.sortBy),
        'sortDirection': SortDirectionToJSON(value.sortDirection),
        'filters': value.filters === undefined ? undefined : ((value.filters as Array<any>).map(SearchAuditsByToJSON)),
    };
}


