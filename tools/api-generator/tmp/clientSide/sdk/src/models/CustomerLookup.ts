/* tslint:disable */
/* eslint-disable */
/**
 * ZMDS API documentation
 * API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomerContactDetails,
    CustomerContactDetailsFromJSON,
    CustomerContactDetailsFromJSONTyped,
    CustomerContactDetailsToJSON,
    CustomerType,
    CustomerTypeFromJSON,
    CustomerTypeFromJSONTyped,
    CustomerTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface CustomerLookup
 */
export interface CustomerLookup {
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    erpId?: string;
    /**
     * 
     * @type {CustomerType}
     * @memberof CustomerLookup
     */
    type?: CustomerType;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    name1?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    name2?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    name3?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    name4?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    streetAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    countryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerLookup
     */
    city?: string;
    /**
     * 
     * @type {CustomerContactDetails}
     * @memberof CustomerLookup
     */
    contactDetails?: CustomerContactDetails;
}

export function CustomerLookupFromJSON(json: any): CustomerLookup {
    return CustomerLookupFromJSONTyped(json, false);
}

export function CustomerLookupFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerLookup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'erpId': !exists(json, 'erpId') ? undefined : json['erpId'],
        'type': !exists(json, 'type') ? undefined : CustomerTypeFromJSON(json['type']),
        'name1': !exists(json, 'name1') ? undefined : json['name1'],
        'name2': !exists(json, 'name2') ? undefined : json['name2'],
        'name3': !exists(json, 'name3') ? undefined : json['name3'],
        'name4': !exists(json, 'name4') ? undefined : json['name4'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'streetAddress': !exists(json, 'streetAddress') ? undefined : json['streetAddress'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'contactDetails': !exists(json, 'contactDetails') ? undefined : CustomerContactDetailsFromJSON(json['contactDetails']),
    };
}

export function CustomerLookupToJSON(value?: CustomerLookup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'erpId': value.erpId,
        'type': CustomerTypeToJSON(value.type),
        'name1': value.name1,
        'name2': value.name2,
        'name3': value.name3,
        'name4': value.name4,
        'title': value.title,
        'streetAddress': value.streetAddress,
        'postalCode': value.postalCode,
        'countryCode': value.countryCode,
        'city': value.city,
        'contactDetails': CustomerContactDetailsToJSON(value.contactDetails),
    };
}


